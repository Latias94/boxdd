name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache cargo registry + target
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install LLVM/Clang (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y clang llvm-dev libclang-dev build-essential
          # Ensure pthreads linkage is available
          sudo apt-get install -y libc6-dev

      - name: Install LLVM/Clang (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install llvm || true
          echo "LIBCLANG_PATH=$(brew --prefix llvm)/lib" >> $GITHUB_ENV

      - name: Install LLVM/Clang (Windows)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          choco install llvm -y --no-progress
          echo "LIBCLANG_PATH=C:\Program Files\LLVM\bin" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Build
        run: cargo build --workspace --all-targets --verbose

      - name: Docs
        env:
          RUSTDOCFLAGS: --cfg docsrs
        run: cargo doc --no-deps --workspace

      - name: Docs (docs.rs offline mode)
        env:
          DOCS_RS: "1"
        run: |
          # Verify docs build path that skips native C build and uses pregenerated bindings
          cargo doc -p boxdd-sys --no-deps
