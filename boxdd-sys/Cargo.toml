[package]
name = "boxdd-sys"
version = "0.1.0"
edition = "2024"
description = "Low-level FFI bindings for Box2D built from upstream via submodule"
license = "MIT OR Apache-2.0"
repository = "https://github.com/Latias94/boxdd"
homepage = "https://github.com/Latias94/boxdd"
links = "box2d"
build = "build.rs"
readme = "README.md"
documentation = "https://docs.rs/boxdd-sys"
keywords = ["box2d", "physics", "ffi", "bindings", "game"]
categories = ["external-ffi-bindings", "game-engines"]

# Keep the crate slim on crates.io
include = [
    "Cargo.toml",
    "README.md",
    "build.rs",
    "src/**",
    # Only what we need from upstream for C build
    "third-party/box2d/include/**",
    "third-party/box2d/src/**",
]

[package.metadata.docs.rs]
all-features = false
no-default-features = true
features = []
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["build-from-source"]
# Build vendored Box2D C sources with cc; always generate bindings via bindgen (native builds).
build-from-source = []
# Link against a prebuilt static 'box2d' (requires BOX2D_LIB_DIR or a system lib); still generates bindings.
prebuilt = []
dynamic-link = []
pkg-config = ["dep:pkg-config"]
package-bin = ["dep:flate2", "dep:tar"]
## Optional performance/debug features (match upstream options)
# Enable AVX2 SIMD optimizations (x86_64 only); ignored if `disable-simd` is also set.
simd-avx2 = []
# Disable all SIMD; takes precedence over `simd-avx2`.
disable-simd = []
# Enable heavy internal validation (assertions and checks)
validate = []

[build-dependencies]
cc = "1"
bindgen = "0.72"
pkg-config = { version = "0.3", optional = true }
flate2 = "1"
tar = "0.4"
reqwest = { version = "0.12", features = ["blocking", "http2", "rustls-tls"], default-features = false }

[dependencies]
flate2 = { version = "1", optional = true }
tar = { version = "0.4", optional = true }

[[bin]]
name = "package"
path = "bin/package/main.rs"
required-features = ["package-bin"]
